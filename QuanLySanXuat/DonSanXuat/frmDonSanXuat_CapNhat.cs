using System;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using QuanLySanXuat.Control;
using QuanLySanXuat.Object;

namespace QuanLySanXuat.DonSanXuat
{
    public partial class frmDonSanXuat_CapNhat : XtraForm
    {
        private double vat = 0;
        private readonly VatLieuCtr vlCtr = new VatLieuCtr();
        private readonly KhoBTP_TPCtr khoBtpTpCtr = new KhoBTP_TPCtr();
        public frmDonSanXuat_CapNhat()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
        }

        private ConnectSQL con = new ConnectSQL();

        private readonly string scd;

        #region Ngaydauthang,cuoithang 
        public static DateTime GetFirstDayOfMonth(DateTime dtInput)
        {
            DateTime dtResult = dtInput;
            dtResult = dtResult.AddDays((-dtResult.Day) + 1);
            return dtResult;
        }

        public static DateTime GetFirstDayOfMonth(int iMonth)
        {
            DateTime dtResult = new DateTime(DateTime.Now.Year, iMonth, 1);
            dtResult = dtResult.AddDays((-dtResult.Day) + 1);
            return dtResult;
        }

        private void vatLieuComboBox_EditValueChanged(object sender, EventArgs e)
        {
            //if (khoTextEdit.Text == banthanhpham || khoTextEdit.Text == thanhpham)
            //    tenSanPhamComboBox.Text = vatLieuComboBox.Text;
        }


        public static DateTime GetLastDayOfMonth(DateTime dtInput)
        {
            DateTime dtResult = dtInput;
            dtResult = dtResult.AddMonths(1);
            dtResult = dtResult.AddDays(-(dtResult.Day));
            return dtResult;
        }
        public static DateTime GetLastDayOfMonth(int iMonth)
        {
            var dtResult = new DateTime(DateTime.Now.Year, iMonth, 1);
            dtResult = dtResult.AddMonths(1);
            dtResult = dtResult.AddDays(-(dtResult.Day));
            return dtResult;
        }
        #endregion
        private void khoTextEdit_EditValueChanged(object sender, EventArgs e)
        {
            if (txtKho.Text == PrintRibbon.banthanhpham || txtKho.Text == PrintRibbon.thanhpham)
            {
                searchLookUpEdit1View.Columns.Clear();
                vatLieuComboBox.Properties.DataSource = khoBtpTpCtr.LoadData3C();
                vatLieuComboBox.Properties.DisplayMember = "TenSanPham";
                vatLieuComboBox.Properties.ValueMember = "TenSanPham";

            }
            else if (txtKho.Text == PrintRibbon.nguyenvatlieu)
            {
                searchLookUpEdit1View.Columns.Clear();
                vatLieuComboBox.Properties.DataSource = vlCtr.LoadData4C();
                vatLieuComboBox.Properties.DisplayMember = "TenHangHoa";
                vatLieuComboBox.Properties.ValueMember = "TenHangHoa";
            }
            else
            {
                searchLookUpEdit1View.Columns.Clear();
                vatLieuComboBox.Properties.DataSource = null;
            }
            var dauthang = DateTime.Now;
            var cuoithang = DateTime.Now;
            var db = new MyDBContextDataContext();
            var lst = (from s in db.procTonKhoBTP_TP_View_NV(GetFirstDayOfMonth(dauthang), GetLastDayOfMonth(cuoithang))
                select s).ToList();
            foreach (var item in lst)
            {
                if (item.TenSanPham != tenSanPhamComboBox.Text) continue;
                if (txtKho.Text == item.Kho || txtKho.Text == PrintRibbon.banthanhpham)
                {
                    bTPSoLuongTonKhoSpinEdit.Text = item.TonCuoiKyKhachHang.ToString();
                    bTPTonKhoCongtySpinEdit.Text = item.TonCuoiKyCongTy.ToString();
                }
                if (txtKho.Text == item.Kho && txtKho.Text == PrintRibbon.thanhpham)
                {
                    tPSoLuongTonKhoSpinEdit.Text = item.TonCuoiKyKhachHang.ToString();
                    TPTonKhoCongtySpinEdit.Text = item.TonCuoiKyCongTy.ToString();
                    break;
                }
            }
        }

        private void btnTinh_Click(object sender, EventArgs e)
        {
            if (ngoaiTeComboBox.SelectedItem == null)
                XtraMessageBox.Show(PrintRibbon.chonngoaite);
            if (CheckVAT.Checked)
                vat = 1.1;
            else
                vat = 1;
            //try
            //{
                var s = ((double.Parse(soLuongSpinEdit.Text) * Convert.ToDouble(donGiaSanPhamSpinEdit.Value)) + Convert.ToDouble(donGiaKhuonSpinEdit.Value) + Convert.ToDouble(donGiaMauSpinEdit.Value) + Convert.ToDouble(donGiaVanChuyenSpinEdit.Value)) * vat ;
                switch (ngoaiTeComboBox.Text)
                {
                    case "USD":
                        tongTienSpinEdit.Text = $"{s:0.#######}";
                        break;
                    case "JPY":
                        tongTienSpinEdit.Text = $"{s:0.####}";
                        break;
                    case "VND":
                        tongTienSpinEdit.Text = $"{s:0}";
                        break;
                }
            //}
            //catch { }
        }
        public readonly NhanVienObj nvObj = new NhanVienObj();
        public frmDonSanXuat_CapNhat(string scd,NhanVienObj obj )
        {
            InitializeComponent();
            this.scd = scd;
            nvObj = obj;
        }

        //private double s;
        private void tongTienSpinEdit_Click_1(object sender, EventArgs e)
        {
           double s = ((double.Parse(soLuongSpinEdit.Text) * double.Parse(donGiaSanPhamSpinEdit.Text)) + double.Parse(donGiaKhuonSpinEdit.Text) + double.Parse(donGiaMauSpinEdit.Text) + double.Parse(donGiaVanChuyenSpinEdit.Text));          
        }

        private void frmDonSanXuat_CapNhat_Load(object sender, EventArgs e)
        {
            SearchLookup();
            NhanData();
        }
        public void SearchLookup()
        {
            //Bảng Phiên Bản
            var pbCtr = new PhienBanCtr();
            txtPhienBan.Properties.DataSource = pbCtr.LoadData();
            txtPhienBan.Properties.DisplayMember = "ID";
            txtPhienBan.Properties.ValueMember = "ID";

            // Bảng Khách Hàng
            var khCtr = new KhachHangCtr();
            txtKhachHang.Properties.DataSource = khCtr.LoadData1C();
            txtKhachHang.Properties.DisplayMember = "TenKhachHang";
            txtKhachHang.Properties.ValueMember = "TenKhachHang";

            // Bảng Loại Sản Phẩm
            var lspCtr = new LoaiSanPhamCtr();
            txtLoaiSanPham.Properties.DataSource = lspCtr.LoadData();
            txtLoaiSanPham.Properties.DisplayMember = "ID";
            txtLoaiSanPham.Properties.ValueMember = "ID";

            // Bảng Bộ Phận
            var bpCtr = new BoPhanCtr();
            txtBoPhan.Properties.DataSource = bpCtr.LoadData();
            txtBoPhan.Properties.DisplayMember = "ID";
            txtBoPhan.Properties.ValueMember = "ID";

            // Phương Pháp In
            var ppiCtr = new PhuongPhapInCtr();
            txtPhuongPhapIn.Properties.DataSource = ppiCtr.LoadData();
            txtPhuongPhapIn.Properties.DisplayMember = "ID";
            txtPhuongPhapIn.Properties.ValueMember = "ID";

            // Bảng Kho
            var KhoCtr = new KhoCtr();
            txtKho.Properties.DataSource = KhoCtr.LoadData1C();
            txtKho.Properties.DisplayMember = "ID";
            txtKho.Properties.ValueMember = "ID";

            // Bảng Kho Nguyên Vật Liệu
            searchLookUpEdit1View.Columns.Clear();
            vatLieuComboBox.Properties.DataSource = vlCtr.LoadData4C();
            vatLieuComboBox.Properties.DisplayMember = "TenHangHoa";
            vatLieuComboBox.Properties.ValueMember = "TenHangHoa";
        }
        public void NhanData()
        {
            var db = new MyDBContextDataContext();
            var lst = (from s in db.tbDonSanXuats where s.SCD == scd select s).Single();
            sCDTextEdit.Text = scd;
            maDonHangTextEdit.Text = lst.MaDonHang;
            txtPhienBan.Text = lst.PhienBan;
            txtKhachHang.Text = lst.TenKhachHang;
            tenSanPhamComboBox.Text = lst.TenSanPham;
            if (lst.NgayGiaoHang != null) ngayGiaoHangDateEdit.DateTime = (DateTime) lst.NgayGiaoHang;
            ngayXuongDonDateEdit.BackColor = Color.LightGreen;
            if (lst.NgayXuongDon != null) ngayXuongDonDateEdit.DateTime = (DateTime) lst.NgayXuongDon;
            ngayGiaoHangDateEdit.BackColor = Color.LightGreen;
            txtLoaiSanPham.Text = lst.LoaiSanPham;
            txtKho.Text = lst.Kho;
            vatLieuComboBox.Text = lst.VatLieu;
            chuYTextEdit.Text = lst.ChuY;
            giaCongMatPhaiTextEdit.Text = lst.GiaCongMatPhai;
            giaCongMatTraiTextEdit.Text = lst.GiaCongMatTrai;
            mauMatPhaiTextEdit.Text = lst.MauMatPhai;
            mauMatTraiTextEdit.Text = lst.MauMatTrai;
            boGocTextEdit.Text = lst.BoGoc;
            ducLoTextEdit.Text = lst.DucLo;
            loaiChiTextEdit.Text = lst.LoaiChi;
            phuongPhapCatTextEdit.Text = lst.PhuongPhapCat;
            txtPhuongPhapIn.Text = lst.PhuongPhapIn;
            soLuongSpinEdit.Text = lst.SoLuong.ToString();
            soLuongSpinEdit.BackColor = Color.LightGreen;
            txtBoPhan.Text = lst.BoPhan;
            chamCatDapHopTextEdit.Text = lst.ChamCatDapHop; 
            khacTextEdit.Text = lst.Khac;
            doDaiTextEdit.Text = lst.DoDai;
            giaCongSauTextEdit.Text = lst.GiaCongSau;
            kichThuocTextEdit.Text = lst.KichThuoc;
            inChu_MaVachTextEdit.Text = lst.InChu_MaVach;
            txtSKU.Text = lst.SKU.ToString();
            bTPSoLuongTonKhoSpinEdit.Text = lst.BTPSoLuongTonKho.ToString();
            tPSoLuongTonKhoSpinEdit.Text = lst.TPSoLuongTonKho.ToString();

            var tien = (from s in db.tbQuanLyTienTes where s.IDTienTe == scd select s).Single();
            donGiaKhuonSpinEdit.Text = tien.DonGiaKhuon.ToString();
            donGiaMauSpinEdit.Text = tien.DonGiaMau.ToString();
            donGiaSanPhamSpinEdit.Text = tien.DonGiaSanPham.ToString();
            donGiaVanChuyenSpinEdit.Text = tien.DonGiaVanChuyen.ToString();
            tongTienSpinEdit.Text = tien.TongTien.ToString();
            ngoaiTeComboBox.Text = tien.NgoaiTe;
            if (tien.GiaTienUSD == null)
                txtGiaTienUSD.Value = 22757;
            else
            {
                txtGiaTienUSD.Text = tien.GiaTienUSD.ToString();
            }
            if (tien.VAT == 1.1)
                CheckVAT.Checked = true;

            if (nvObj.Chucvu == "Nhân Viên" && tien.QuanLy == "1")
            {
                GroupTien.Enabled = false;
            }

        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            var db = new MyDBContextDataContext();
            var procqldh = (from a in db.DonSanXuat_QuanLyDonhang_View() where a.SCD == sCDTextEdit.Text select a).Single();
            if (procqldh.HoanThanh == null)
            {
                var tb = (from s in db.tbDonSanXuats where s.SCD == sCDTextEdit.Text select s).Single();
                tb.MaDonHang = maDonHangTextEdit.Text;
                tb.PhienBan = txtPhienBan.Text;
                tb.TenKhachHang = txtKhachHang.Text;
                tb.NgayXuongDon = ngayXuongDonDateEdit.DateTime;
                tb.NgayGiaoHang = ngayGiaoHangDateEdit.DateTime;
                tb.TenSanPham = tenSanPhamComboBox.Text;
                tb.LoaiSanPham = txtLoaiSanPham.Text;
                tb.PhuongPhapIn = txtPhuongPhapIn.Text;
                tb.KichThuoc = kichThuocTextEdit.Text;
                tb.SoLuong = int.Parse(soLuongSpinEdit.Text);
                tb.VatLieu = vatLieuComboBox.Text;
                tb.GiaCongMatPhai = giaCongMatPhaiTextEdit.Text;
                tb.GiaCongMatTrai = giaCongMatTraiTextEdit.Text;
                tb.MauMatPhai = mauMatPhaiTextEdit.Text;
                tb.MauMatTrai = mauMatTraiTextEdit.Text;
                tb.PhuongPhapCat = phuongPhapCatTextEdit.Text;
                tb.BoGoc = boGocTextEdit.Text;
                tb.DucLo = ducLoTextEdit.Text;
                tb.LoaiChi = loaiChiTextEdit.Text;
                tb.ChuY = chuYTextEdit.Text;
                tb.BoPhan = txtBoPhan.Text;
                tb.ChamCatDapHop = chamCatDapHopTextEdit.Text;
                tb.DoDai = doDaiTextEdit.Text;
                tb.GiaCongSau = giaCongSauTextEdit.Text;
                tb.InChu_MaVach = inChu_MaVachTextEdit.Text;
                tb.SKU = (int)txtSKU.Value;
                tb.Kho = txtKho.Text;
                tb.BTPSoLuongTonKho = Convert.ToInt32(bTPSoLuongTonKhoSpinEdit.Value);
                tb.TPSoLuongTonKho = Convert.ToInt32(tPSoLuongTonKhoSpinEdit.Value);
                tb.BTPTonKhoCongTy = Convert.ToInt32(bTPTonKhoCongtySpinEdit.Value);
                tb.TPTonKhoCongTy = Convert.ToInt32(TPTonKhoCongtySpinEdit.Value);
                tb.ThoiGianXuongDon = DateTime.Now;
                tb.NhanVienNghiepVu = nvObj.Tennhanvien;
                if (procqldh.NghiepVu_XuongDon != null)
                {
                    tb.ChinhSua = "1";
                }

                var tiente = (from s in db.tbQuanLyTienTes where s.IDTienTe == sCDTextEdit.Text select s).Single();
                if (tiente.QuanLy == null)
                {
                    tiente.IDTienTe = sCDTextEdit.Text;
                    tiente.DonGiaSanPham = Convert.ToDouble(donGiaSanPhamSpinEdit.Value);
                    tiente.DonGiaKhuon = Convert.ToDouble(donGiaKhuonSpinEdit.Value);
                    tiente.DonGiaMau = Convert.ToDouble(donGiaMauSpinEdit.Value);
                    tiente.DonGiaVanChuyen = Convert.ToDouble(donGiaVanChuyenSpinEdit.Value);
                    tiente.TongTien = Convert.ToDouble(tongTienSpinEdit.Value);
                    tiente.NgoaiTe = ngoaiTeComboBox.Text;
                    tiente.GiaTienUSD = (int)txtGiaTienUSD.Value;
                    if (CheckVAT.Checked)
                        tiente.VAT = 1.1;
                    else if(CheckVAT.CheckState == CheckState.Unchecked || tongTienSpinEdit.Text == null)
                        tiente.VAT = 1;

                    if (nvObj.Chucvu == "Quản Lý")
                        tiente.QuanLy = "1";
                }

                else if (nvObj.Chucvu == "Quản Lý" && tiente.QuanLy == "1" && tiente.KetChuyen == null)
                {
                    tiente.IDTienTe = sCDTextEdit.Text;
                    tiente.DonGiaSanPham = Convert.ToDouble(donGiaSanPhamSpinEdit.Value);
                    tiente.DonGiaKhuon = Convert.ToDouble(donGiaKhuonSpinEdit.Value);
                    tiente.DonGiaMau = Convert.ToDouble(donGiaMauSpinEdit.Value);
                    tiente.DonGiaVanChuyen = Convert.ToDouble(donGiaVanChuyenSpinEdit.Value);
                    tiente.TongTien = Convert.ToDouble(tongTienSpinEdit.Value);
                    tiente.NgoaiTe = ngoaiTeComboBox.Text;
                    if (CheckVAT.Checked)
                        tiente.VAT = 1.1;
                    else if (CheckVAT.CheckState == CheckState.Unchecked || tongTienSpinEdit.Text == null)
                        tiente.VAT = 1;
                }

                var baocao = (from s in db.tbBaoCaoThietKes where s.IDBaoCaoThietKe == sCDTextEdit.Text select s).Single();
                baocao.Size = khacTextEdit.Text;
                baocao.SpSize = soLuongSpinEdit.Text;

                db.SubmitChanges();
                MessageBox.Show(PrintRibbon.capnhat);
                frmDonSanXuat_CapNhat_Load(sender, e);
            }
            else
            {
                MessageBox.Show("Đơn hàng đã hoàn thành, không thể cập nhật");
            }

        }

        private void tenSanPhamComboBox_Enter_1(object sender, EventArgs e)
        {
            //var db = new MyDBContextDataContext();
            //var lst = (from s in db.tbDanhSachSanPhams select s).ToList();
            //tenSanPhamComboBox.DataSource = lst;
            //tenSanPhamComboBox.DisplayMember = "tensanpham";
            //tenSanPhamComboBox.ValueMember = "masanpham";
            //tenSanPhamComboBox.SelectedItem = null; 
        }

        private void tenSanPhamComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {

        }
    }
}